// <auto-generated />
using System;
using Hattrick.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hattrick.Migrations
{
    [DbContext(typeof(HattrickDbContext))]
    [Migration("20221128184759_add-ticket-status")]
    partial class addticketstatus
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Hattrick.Models.Match", b =>
                {
                    b.Property<int>("MatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MatchId"), 1L, 1);

                    b.Property<decimal?>("AwayOrDraw")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AwayTeam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("AwayWin")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Competition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Draw")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("HomeOrAway")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("HomeOrDraw")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("HomeTeam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("HomeWin")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MatchDateTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatchOutcome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SpecialOffer")
                        .HasColumnType("bit");

                    b.HasKey("MatchId");

                    b.ToTable("Match");
                });

            modelBuilder.Entity("Hattrick.Models.MatchDetails", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketId"), 1L, 1);

                    b.Property<string>("AwayTeam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Competition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeTeam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MatchId")
                        .HasColumnType("int");

                    b.Property<string>("MatchOutcome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Odd")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SpecialOffer")
                        .HasColumnType("int");

                    b.Property<int>("TicketId1")
                        .HasColumnType("int");

                    b.HasKey("TicketId");

                    b.HasIndex("TicketId1");

                    b.ToTable("MatchDetails");
                });

            modelBuilder.Entity("Hattrick.Models.SpecialOffer", b =>
                {
                    b.Property<int>("MatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MatchId"), 1L, 1);

                    b.Property<decimal?>("AwayOrDraw")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AwayTeam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("AwayWin")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Competition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Draw")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("HomeOrAway")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("HomeOrDraw")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("HomeTeam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("HomeWin")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MatchDateTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MatchId");

                    b.ToTable("SpecialOffer");
                });

            modelBuilder.Entity("Hattrick.Models.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketId"), 1L, 1);

                    b.Property<decimal>("BetAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OddsTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TicketStatus")
                        .HasColumnType("int");

                    b.Property<decimal>("WinningAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("TicketId");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("Hattrick.Models.Transactions", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"), 1L, 1);

                    b.Property<decimal>("AvailableAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("FromAccount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ToAccount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Transaction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransactionId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Hattrick.Models.MatchDetails", b =>
                {
                    b.HasOne("Hattrick.Models.Ticket", null)
                        .WithMany("Matches")
                        .HasForeignKey("TicketId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hattrick.Models.Ticket", b =>
                {
                    b.Navigation("Matches");
                });
#pragma warning restore 612, 618
        }
    }
}
